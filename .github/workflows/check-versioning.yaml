name: Check Versioning
on:
  pull_request:
    branches:
      - main

jobs:
  check-addon-changes:
    runs-on: ubuntu-latest
    outputs:
      changedAddons: ${{ steps.filter.outputs.changes }}
      changedChangelogFiles: ${{ steps.changed-files.outputs.changelogs_files }}
    steps:

    - name: ‚Ü©Ô∏è Checkout
      uses: actions/checkout@v2

    - name: üìÇ Detect changed addons
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: .github/paths-filter.yml

    - name: üìÇ Detect changed files
      uses: dorny/paths-filter@v2
      id: changed-files
      with:
        list-files: csv
        filters: |
          changelogs:
            - '**/CHANGELOG.md'
  check-changed-changelog:
    name: Check if CHANGELOG.md changed
    if: ${{ needs.check-addon-changes.outputs.changedAddons != '[]' }}
    runs-on: ubuntu-latest
    needs: check-addon-changes
    strategy:
      fail-fast: false
      matrix:
        addon: ${{ fromJSON(needs.check-addon-changes.outputs.changedAddons) }}
    steps:

      - name: üîé Check for updated CHANGELOG.md
        shell: bash
        run: |
          if [[ ! "${{ needs.check-addon-changes.outputs.changedChangelogFiles }}" =~ "${{ matrix.addon }}/CHANGELOG.md" ]]; then
              echo "::error::No new entries in ${{ matrix.addon }} CHANGELOG.md file!"
              exit 1
          fi
  check-version-matching:
    name: Check for same addon versions
    if: ${{ needs.check-addon-changes.outputs.changedAddons != '[]' }}
    runs-on: ubuntu-latest
    needs: check-addon-changes
    strategy:
      fail-fast: false
      matrix:
        addon: ${{ fromJSON(needs.check-addon-changes.outputs.changedAddons) }}
    steps:

      - name: ‚Ü©Ô∏è Checkout
        uses: actions/checkout@v2

      - name: ‚ÑπÔ∏è Gather addon info
        id: information
        uses: frenck/action-addon-information@v1
        with:
          path: "./${{ matrix.addon }}/"

      - name: üîé Check if versions of CHANGELOG.md and config match
        shell: bash
        run: |
          config_version=${{ steps.information.outputs.version }}
          changelog_version=$(sed -nr "0,/#{1,2}\s+(\S+)\s+-.*/{s//\1/p}" "${{ matrix.addon }}/CHANGELOG.md")
          if [[ ! "$config_version" = "$changelog_version" ]]; then
              echo "::error::The config version does not match the latest Changelog version!"
              exit 1
          fi
